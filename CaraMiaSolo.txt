int solo[] = {
NOTE_A5, NOTE_AS5, 0, NOTE_C6, NOTE_AS5, NOTE_A5, NOTE_D6, NOTE_C6,
NOTE_AS5, 0, NOTE_A5, NOTE_AS5, NOTE_C6, 0, NOTE_D6, NOTE_C6,
0, NOTE_AS5, NOTE_C6, 0, NOTE_AS5, NOTE_C6, NOTE_D6, NOTE_C6,
NOTE_AS5, NOTE_AS5, NOTE_C6, NOTE_AS5, NOTE_A5, NOTE_AS5, NOTE_C6, NOTE_DS6,
NOTE_D6, NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, 0, NOTE_D6, 
NOTE_C6, NOTE_AS5, NOTE_C6, NOTE_C6, NOTE_AS5, NOTE_A5, NOTE_AS5, 0,
0, NOTE_AS5, NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, 0, 
NOTE_D6, NOTE_DS6, NOTE_DS6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, NOTE_C6, 
NOTE_AS5, NOTE_A5, NOTE_AS5, NOTE_A5, NOTE_AS5, NOTE_C6, NOTE_AS5, NOTE_A5, 
NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_A5, NOTE_AS5, NOTE_C6, NOTE_D6, NOTE_C6, 
NOTE_C6, 0, NOTE_AS5, NOTE_C6, 0, NOTE_AS5, NOTE_C6, NOTE_D6,
NOTE_C6, NOTE_AS5, NOTE_AS5, NOTE_AS5, NOTE_C6, NOTE_C6, NOTE_A5, NOTE_A5,
NOTE_C6, NOTE_DS6, NOTE_D6, NOTE_D6, NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, 
NOTE_A5, NOTE_AS5, NOTE_C6, 0, 0, NOTE_D6, NOTE_C6, NOTE_C6,
NOTE_AS5, NOTE_C6, NOTE_AS5, NOTE_A5, NOTE_AS5, NOTE_F6, NOTE_DS6, NOTE_D6, 
NOTE_C6, NOTE_AS6, NOTE_C6, NOTE_D6, NOTE_D6, NOTE_C6, 0, NOTE_D6, 
NOTE_DS6, NOTE_DS6, NOTE_D6, NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_AS5,
NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, NOTE_D6, NOTE_DS6, NOTE_DS6,
NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, NOTE_C6, 0, NOTE_AS5, NOTE_A5,
NOTE_AS5, NOTE_C6, NOTE_D6, NOTE_C6, NOTE_AS5, NOTE_C6, NOTE_AS5, NOTE_A5,
NOTE_AS5, NOTE_AS5, NOTE_C6, 0, NOTE_DS6, NOTE_DS6, NOTE_D6, NOTE_C6, 
NOTE_AS5, NOTE_C6, NOTE_D6
};

int soloDur[] = {
100, 50, 50, 100, 50, 50, 50, 100,
50, 50, 100, 50, 50, 100, 100, 100,
100, 100, 100, 100, 50, 50, 100, 50,
100, 100, 50, 50, 50, 50, 100, 100,
50, 50, 100, 100, 100, 200, 100, 50, 
50, 50, 50, 100, 100, 100, 100, 100,
100, 100, 100, 100, 50, 50, 50, 50, 
50, 50, 100, 100, 100, 50, 50, 200, 
100, 100, 200, 100, 100, 100, 50, 50, 
50, 50, 100, 100, 50, 50, 50, 50,
100, 100, 100, 100, 100, 50, 50, 100,
50, 50, 50, 200, 50, 50, 50, 100,
100, 50, 50, 50, 50, 100, 100, 50, 
50, 50, 50, 100, 100, 50, 50, 100,
50, 50, 100, 100, 100, 100, 50, 50, 
50, 50, 50, 50, 100, 100, 100, 50, 
50, 100, 100, 100, 100, 100, 100, 100,
100, 100, 50, 50, 50, 50, 100, 100,
100, 100, 50, 50, 100, 100, 100, 100,
100, 100, 100, 50, 50, 50, 50, 50,
100, 50, 50, 100, 100, 200, 200, 100, 
100, 200, 400
};
